---
- name: Minimal Nginx deployment on web servers
  hosts: web_servers
  become: true

  vars:
    index_html_src: files/index.html
    index_html_dest: /var/www/html/index.html
    nginx_default_site: /etc/nginx/sites-enabled/default
    nginx_ssl_dir: /etc/nginx/ssl
    nginx_ssl_cert: /etc/nginx/ssl/nginx.crt
    nginx_ssl_key: /etc/nginx/ssl/nginx.key
    nginx_crt_src: files/nginx.crt
    nginx_key_src: files/nginx.key
    nginx_conf_src: files/nginx.conf.j2
    nginx_conf_dest: /etc/nginx/nginx.conf

  tasks:
    # Update APT cache
    - name: Update APT cache
      apt:
        update_cache: yes

    # Install nginx package
    - name: Install nginx
      apt:
        name: nginx
        state: present

    # Ensure nginx is started and enabled on boot
    - name: Ensure nginx is started and enabled
      service:
        name: nginx
        state: started
        enabled: true

    # Remove the default nginx site configuration
    - name: Remove the default nginx site configuration
      file:
        path: "{{ nginx_default_site }}"
        state: absent
      notify: Restart nginx

    # Deploy custom index.html to the web root
    - name: Deploy custom index.html
      template:
        src: "{{ index_html_src }}"
        dest: "{{ index_html_dest }}"
        owner: www-data
        group: www-data
        mode: "0644"
      notify: Restart nginx

    # Deploy custom nginx.conf
    - name: Deploy custom nginx.conf
      template:
        src: "{{ nginx_conf_src }}"
        dest: "{{ nginx_conf_dest }}"
        owner: root
        group: root
        mode: "0644"
      notify: Restart nginx

    # Create the SSL directory
    - name: Create SSL directory
      file:
        path: "{{ nginx_ssl_dir }}"
        state: directory
        owner: root
        group: www-data
        mode: "0750"

    # Copy the SSL private key if it exists
    - name: Copy SSL private key if it exists
      copy:
        src: "{{ nginx_key_src }}"
        dest: "{{ nginx_ssl_key }}"
        owner: root
        group: www-data
        mode: "0640"
      when: lookup('file', nginx_key_src, errors='ignore') != ''
      notify: Restart nginx

    # Copy the SSL certificate if it exists
    - name: Copy SSL certificate if it exists
      copy:
        src: "{{ nginx_crt_src }}"
        dest: "{{ nginx_ssl_cert }}"
        owner: root
        group: www-data
        mode: "0644"
      when: lookup('file', nginx_crt_src, errors='ignore') != ''
      notify: Restart nginx

    # Generate a self-signed certificate if none is provided
    - name: Generate self-signed certificate if none is provided
      command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout {{ nginx_ssl_key }} -out {{ nginx_ssl_cert }} \
        -subj "/C=FR/ST=France/L=Paris/O=Security/OU=IT Department/CN=localhost"
      args:
        creates: "{{ nginx_ssl_cert }}"
      when: (lookup('file', nginx_crt_src, errors='ignore') == '' or lookup('file', nginx_key_src, errors='ignore') == '')
      notify: Restart nginx

  handlers:
    # Handler to restart nginx service
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
